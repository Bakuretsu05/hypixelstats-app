{"version":3,"sources":["context.jsx","components/Cards/BedwarsCard.jsx","components/Cards/SkywarsCard.jsx","assets/logo.png","components/Nav.jsx","routes/About.jsx","routes/PlayerStats.jsx","routes/SearchPlayer.jsx","App.jsx","index.js"],"names":["API_KEY","AppContext","React","createContext","AppProvider","children","useState","searchTerm","setSearchTerm","playerData","setPlayerData","playerHead","setPlayerHead","fetchPlayerData","useCallback","a","fetch","res","json","data","player","uuid","head","url","res2","data2","friends","records","console","log","Error","Provider","value","useGlobalContext","useContext","getBedwarsStarsByExp","exp","BEDWARS_EXP_PER_PRESTIGE","BEDWARS_LEVELS_PER_PRESTIGE","prestige","over","Math","floor","BedwarsCard","Bedwars","stats","className","Experience","winstreak","wins_bedwars","losses_bedwars","toFixed","final_kills_bedwars","final_deaths_bedwars","beds_broken_bedwars","beds_lost_bedwars","SkywarsCard","SkyWars","levelFormatted","slice","games_played_skywars","wins","losses","Date","time_played","toISOString","substr","kills","deaths","assists","Nav","navigate","useNavigate","src","logo","alt","onClick","About","PlayerStats","challengesObject","questsObject","networkExp","newPackageRank","displayname","sqrt","achievementPoints","karma","quests","Object","entries","reduce","totalQuests","quest","completions","length","challenges","all_time","sum","curr","e","target","SearchPlayer","searchPlayer","htmlFor","type","placeholder","name","id","onChange","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bfee9bc9.chunk.js","sourcesContent":["import React, { useState, useContext, useCallback } from \"react\";\r\n\r\n// env variables\r\nconst API_KEY = \"2f9bdbf2-9099-4281-8898-3ab625237d5f\";\r\nconst HEAD_API = \"https://crafatar.com/avatars/\"; //+uuid\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport default function AppProvider({ children }) {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [playerData, setPlayerData] = useState(null);\r\n  const [playerHead, setPlayerHead] = useState(null);\r\n\r\n  const fetchPlayerData = useCallback(async () => {\r\n    try {\r\n      // fetch hypixel stats\r\n      const res = await fetch(\r\n        `https://api.hypixel.net/player?key=${API_KEY}&name=${searchTerm}`\r\n      );\r\n      const data = await res.json();\r\n\r\n      // fetch head avatar\r\n      const head = await fetch(HEAD_API + data.player.uuid);\r\n      setPlayerHead(head.url);\r\n\r\n      // fetch frinds of player\r\n      const res2 = await fetch(\r\n        `https://api.hypixel.net/friends?key=${API_KEY}&uuid=${data.player.uuid}`\r\n      );\r\n      const data2 = await res2.json();\r\n\r\n      setPlayerData({\r\n        ...data.player,\r\n        friends: data2.records,\r\n      });\r\n\r\n      return true;\r\n    } catch (err) {\r\n      console.log(new Error(err));\r\n    }\r\n  }, [searchTerm]);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        searchTerm,\r\n        setSearchTerm,\r\n        playerData,\r\n        fetchPlayerData,\r\n        playerHead,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useGlobalContext() {\r\n  return useContext(AppContext);\r\n}\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"../../context\";\r\nimport \"../../routes/PlayerStats.css\";\r\n\r\n// helper function to calculate bedwars stars by total bedwars experience\r\nfunction getBedwarsStarsByExp(exp) {\r\n  const BEDWARS_EXP_PER_PRESTIGE = 489000;\r\n  const BEDWARS_LEVELS_PER_PRESTIGE = 100;\r\n\r\n  let prestige = exp / BEDWARS_EXP_PER_PRESTIGE;\r\n  exp = exp % BEDWARS_EXP_PER_PRESTIGE;\r\n  if (prestige > 5) {\r\n    let over = prestige % 5;\r\n    exp += over * BEDWARS_EXP_PER_PRESTIGE;\r\n    prestige -= over;\r\n  }\r\n\r\n  // first few levels are different\r\n  if (exp < 500) {\r\n    return 0 + prestige * BEDWARS_LEVELS_PER_PRESTIGE;\r\n  } else if (exp < 1500) {\r\n    return 1 + prestige * BEDWARS_LEVELS_PER_PRESTIGE;\r\n  } else if (exp < 3500) {\r\n    return 2 + prestige * BEDWARS_LEVELS_PER_PRESTIGE;\r\n  } else if (exp < 5500) {\r\n    return 3 + prestige * BEDWARS_LEVELS_PER_PRESTIGE;\r\n  } else if (exp < 9000) {\r\n    return 4 + prestige * BEDWARS_LEVELS_PER_PRESTIGE;\r\n  }\r\n  exp -= 9000;\r\n\r\n  return Math.floor(exp / 5000 + 4 + prestige * BEDWARS_LEVELS_PER_PRESTIGE);\r\n}\r\n\r\nexport default function BedwarsCard() {\r\n  const { playerData } = useGlobalContext();\r\n  const { Bedwars } = playerData.stats;\r\n\r\n  return (\r\n    <div className=\"BedwarsCard --stats-card\">\r\n      <h3 className=\"PlayerStats__title\">Bedwars Card</h3>\r\n\r\n      <ul className=\"PlayerStats__stats-list\">\r\n        <li>\r\n          <span className=\"PlayerStats__stats-text\">Star: </span>\r\n          <span className=\"PlayerStats__stats-value\">\r\n            {getBedwarsStarsByExp(Bedwars.Experience)}*\r\n          </span>\r\n        </li>\r\n\r\n        <li>\r\n          <span className=\"PlayerStats__stats-text\">Winstreak: </span>\r\n          <span className=\"PlayerStats__stats-value\">{Bedwars.winstreak}</span>\r\n        </li>\r\n\r\n        <li>\r\n          <span className=\"PlayerStats__stats-text\">Wins: </span>\r\n          <span className=\"PlayerStats__stats-value\">\r\n            {Bedwars.wins_bedwars}\r\n          </span>\r\n        </li>\r\n\r\n        <li>\r\n          <span className=\"PlayerStats__stats-text\">Losses: </span>\r\n          <span className=\"PlayerStats__stats-value\">\r\n            {Bedwars.losses_bedwars}\r\n          </span>\r\n        </li>\r\n\r\n        <li>\r\n          <span className=\"PlayerStats__stats-text\">WLR: </span>\r\n          <span className=\"PlayerStats__stats-value\">\r\n            {(Bedwars.wins_bedwars / Bedwars.losses_bedwars).toFixed(2)}\r\n          </span>\r\n        </li>\r\n\r\n        <li>\r\n          <span className=\"PlayerStats__stats-text\">Final Kills: </span>\r\n          <span className=\"PlayerStats__stats-value\">\r\n            {Bedwars.final_kills_bedwars}\r\n          </span>\r\n        </li>\r\n\r\n        <li>\r\n          <span className=\"PlayerStats__stats-text\">Final Deaths: </span>\r\n          <span className=\"PlayerStats__stats-value\">\r\n            {Bedwars.final_deaths_bedwars}\r\n          </span>\r\n        </li>\r\n\r\n        <li>\r\n          <span className=\"PlayerStats__stats-text\">FKDR: </span>\r\n          <span className=\"PlayerStats__stats-value\">\r\n            {(\r\n              Bedwars.final_kills_bedwars / Bedwars.final_deaths_bedwars\r\n            ).toFixed(2)}\r\n          </span>\r\n        </li>\r\n\r\n        <li>\r\n          <span className=\"PlayerStats__stats-text\">Beds Broken: </span>\r\n          <span className=\"PlayerStats__stats-value\">\r\n            {Bedwars.beds_broken_bedwars}\r\n          </span>\r\n        </li>\r\n\r\n        <li>\r\n          <span className=\"PlayerStats__stats-text\">Beds Lost: </span>\r\n          <span className=\"PlayerStats__stats-value\">\r\n            {Bedwars.beds_lost_bedwars}\r\n          </span>\r\n        </li>\r\n\r\n        <li>\r\n          <span className=\"PlayerStats__stats-text\">BBLR: </span>\r\n          <span className=\"PlayerStats__stats-value\">\r\n            {(Bedwars.beds_broken_bedwars / Bedwars.beds_lost_bedwars).toFixed(\r\n              2\r\n            )}\r\n          </span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"../../context\";\r\n\r\nexport default function SkywarsCard() {\r\n  const { playerData } = useGlobalContext();\r\n  const { SkyWars } = playerData.stats;\r\n\r\n  return (\r\n    <div className=\"SkywarsCard --stats-card\">\r\n      <h3 className=\"PlayerStats__title\">SkywarsCard</h3>\r\n\r\n      <ul className=\"PlayerStats__stats-list\">\r\n        <li>\r\n          <span className=\"PlayerStats__stats-text\">Star: </span>\r\n          <span className=\"PlayerStats__stats-value\">\r\n            {SkyWars.levelFormatted.slice(2)}\r\n          </span>\r\n        </li>\r\n\r\n        <li>\r\n          <span className=\"PlayerStats__stats-text\">Matches: </span>\r\n          <span className=\"PlayerStats__stats-value\">\r\n            {SkyWars.games_played_skywars}\r\n          </span>\r\n        </li>\r\n\r\n        <li>\r\n          <span className=\"PlayerStats__stats-text\">Wins: </span>\r\n          <span className=\"PlayerStats__stats-value\">{SkyWars.wins}</span>\r\n        </li>\r\n\r\n        <li>\r\n          <span className=\"PlayerStats__stats-text\">Losses: </span>\r\n          <span className=\"PlayerStats__stats-value\">{SkyWars.losses}</span>\r\n        </li>\r\n\r\n        <li>\r\n          <span className=\"PlayerStats__stats-text\">WLR: </span>\r\n          <span className=\"PlayerStats__stats-value\">\r\n            {(SkyWars.wins / SkyWars.losses).toFixed(2)}\r\n          </span>\r\n        </li>\r\n\r\n        <li>\r\n          <span className=\"PlayerStats__stats-text\">Time Played: </span>\r\n          <span className=\"PlayerStats__stats-value\">\r\n            {new Date(SkyWars.time_played * 1000).toISOString().substr(11, 8)}\r\n          </span>\r\n        </li>\r\n\r\n        <li>\r\n          <span className=\"PlayerStats__stats-text\">Kills: </span>\r\n          <span className=\"PlayerStats__stats-value\">{SkyWars.kills}</span>\r\n        </li>\r\n\r\n        <li>\r\n          <span className=\"PlayerStats__stats-text\">Kills: </span>\r\n          <span className=\"PlayerStats__stats-value\">{SkyWars.deaths}</span>\r\n        </li>\r\n\r\n        <li>\r\n          <span className=\"PlayerStats__stats-text\">KDR: </span>\r\n          <span className=\"PlayerStats__stats-value\">\r\n            {(SkyWars.kills / SkyWars.deaths).toFixed(2)}\r\n          </span>\r\n        </li>\r\n\r\n        <li>\r\n          <span className=\"PlayerStats__stats-text\">Assists: </span>\r\n          <span className=\"PlayerStats__stats-value\">{SkyWars.assists}</span>\r\n        </li>\r\n\r\n        <li>\r\n          <span className=\"PlayerStats__stats-text\">Kills/Game: </span>\r\n          <span className=\"PlayerStats__stats-value\">\r\n            {(SkyWars.kills / SkyWars.games_played_skywars).toFixed(2)}\r\n          </span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.1f82137d.png\";","import React from \"react\";\r\nimport \"./Nav.css\";\r\nimport logo from \"../assets/logo.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Nav() {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"Nav\">\r\n      <img\r\n        className=\"Nav__logo\"\r\n        src={logo}\r\n        alt=\"logo of PixieStats\"\r\n        onClick={() => navigate(\"/\")}\r\n      />\r\n\r\n      <h3 className=\"Nav__about\" onClick={() => navigate(\"about\")}>\r\n        About\r\n      </h3>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div className=\"About\">\r\n      <p>\r\n        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Laudantium et\r\n        dolorum impedit ad, nesciunt accusantium suscipit ducimus molestiae cum\r\n        quidem velit iure tempore ex, voluptatibus numquam vero consequuntur,\r\n        odio dolor illum eligendi deleniti? Distinctio qui odit dicta aperiam\r\n        nam, cumque, culpa ipsam natus perferendis dolores delectus nobis, animi\r\n        incidunt voluptate?\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Outlet, useNavigate } from \"react-router\";\r\nimport \"./PlayerStats.css\";\r\nimport { useGlobalContext } from \"../context\";\r\n\r\n// helper function to calculate network level with the provided total network exp\r\nfunction getNetworkLevelbyNetworkExp(networkExp) {\r\n  return Math.floor(Math.sqrt(2 * networkExp + 30625) / 50 - 2.5);\r\n}\r\n\r\n// helper function to get total of completed quests by iterating every props in \"quests\" props and summing the length of each props.completions\r\nfunction getTotalQuestsCompletion(questsObject) {\r\n  return Object.entries(questsObject).reduce((totalQuests, quest) => {\r\n    if (quest[1].completions) {\r\n      return (totalQuests += quest[1].completions.length);\r\n    } else {\r\n      return totalQuests;\r\n    }\r\n  }, 0);\r\n}\r\n\r\n// helper function to calculate total of challenges completed\r\nfunction getTotalChallenges(challengesObject) {\r\n  return Object.entries(challengesObject.all_time).reduce(\r\n    (sum, curr) => (sum += curr[1]),\r\n    0\r\n  );\r\n}\r\n\r\nexport default function PlayerStats() {\r\n  const { playerHead, playerData } = useGlobalContext();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    playerData && (\r\n      <div className=\"PlayerStats\">\r\n        <div className=\"PlayerStats__player\">\r\n          <img\r\n            className=\"PlayerStats__player-head\"\r\n            src={playerHead}\r\n            alt=\"player head avatar\"\r\n          />\r\n          <h3 className=\"PlayerStats__title\">{`[${playerData.newPackageRank}] ${playerData.displayname}`}</h3>\r\n        </div>\r\n        <div className=\"PlayerStats__general-stats\">\r\n          <ul className=\"PlayerStats__stats-list\">\r\n            <li>\r\n              <span className=\"PlayerStats__stats-text\">Level: </span>\r\n              <span className=\"PlayerStats__stats-value\">\r\n                {getNetworkLevelbyNetworkExp(playerData.networkExp)}\r\n              </span>\r\n            </li>\r\n\r\n            <li>\r\n              <span className=\"PlayerStats__stats-text\">AP: </span>\r\n              <span className=\"PlayerStats__stats-value\">\r\n                {playerData.achievementPoints}\r\n              </span>\r\n            </li>\r\n\r\n            <li>\r\n              <span className=\"PlayerStats__stats-text\">Karma: </span>\r\n              <span className=\"PlayerStats__stats-value\">\r\n                {playerData.karma}\r\n              </span>\r\n            </li>\r\n\r\n            <li>\r\n              <span className=\"PlayerStats__stats-text\">Quests: </span>\r\n              <span className=\"PlayerStats__stats-value\">\r\n                {getTotalQuestsCompletion(playerData.quests)}\r\n              </span>\r\n            </li>\r\n\r\n            <li>\r\n              <span className=\"PlayerStats__stats-text\">Challenges: </span>\r\n              <span className=\"PlayerStats__stats-value\">\r\n                {getTotalChallenges(playerData.challenges)}\r\n              </span>\r\n            </li>\r\n\r\n            <li>\r\n              <span className=\"PlayerStats__stats-text\">Friends: </span>\r\n              <span className=\"PlayerStats__stats-value\">\r\n                {playerData.friends.length}\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"PlayerStats__stats\">\r\n          <select>\r\n            <option> -- Choose a gamemode -- </option>\r\n            <option value=\"bedwars\" onClick={(e) => navigate(e.target.value)}>\r\n              Bedwars\r\n            </option>\r\n            <option value=\"skywars\" onClick={(e) => navigate(e.target.value)}>\r\n              Skywars\r\n            </option>\r\n          </select>\r\n          <Outlet />\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useGlobalContext } from \"../context\";\r\nimport \"./SearchPlayer.css\";\r\n\r\nexport default function SearchPlayer() {\r\n  const { fetchPlayerData, searchTerm, setSearchTerm } = useGlobalContext();\r\n  const navigate = useNavigate();\r\n\r\n  const searchPlayer = async () => {\r\n    const isDataFetched = await fetchPlayerData();\r\n    if (isDataFetched) {\r\n      navigate(`stats/${searchTerm}`);\r\n    } else {\r\n      // TODO: Make a \"No player found\" modal\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"SearchPlayer\">\r\n      <h3 className=\"SearchPlayer__title\" htmlFor=\"playerName\">\r\n        Search Player\r\n      </h3>\r\n      <input\r\n        className=\"SearchPlayer__input\"\r\n        type=\"text\"\r\n        placeholder=\"Enter a username\"\r\n        name=\"playerName\"\r\n        id=\"playerName\"\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n      />\r\n      <button className=\"SearchPlayer__button\" onClick={searchPlayer}>\r\n        Show Player\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\n// Components\r\nimport BedwarsCard from \"./components/Cards/BedwarsCard\";\r\nimport SkywarsCard from \"./components/Cards/SkywarsCard\";\r\nimport Nav from \"./components/Nav\";\r\nimport About from \"./routes/About\";\r\nimport PlayerStats from \"./routes/PlayerStats\";\r\nimport SearchPlayer from \"./routes/SearchPlayer\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"fullscreen-container\">\r\n      <Router>\r\n        <Nav />\r\n        <Routes>\r\n          <Route path=\"/\" element={<SearchPlayer />} />\r\n          <Route path=\"about\" element={<About />} />\r\n          <Route path=\"stats/:playerName\" element={<PlayerStats />}>\r\n            <Route path=\"bedwars\" element={<BedwarsCard />} />\r\n            <Route path=\"skywars\" element={<SkywarsCard />} />\r\n          </Route>\r\n        </Routes>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport AppProvider from \"./context\";\r\n\r\nReactDOM.render(\r\n  <AppProvider>\r\n    <App />\r\n  </AppProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}